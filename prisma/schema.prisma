// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String                @unique
  password            String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  UserAndRoleRelation UserAndRoleRelation[]
  Profile             Profile[]
  UserSkillRelation   UserSkillRelation[]
}

model Profile {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  bio           String
  country       String
  state         String
  city          String
  zip           String
  address       String
  contactNumber String
  website       String
  avatar        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  User          User     @relation(fields: [userId], references: [id])
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  UserSkillRelation UserSkillRelation[]
}

model UserSkillRelation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  skillId   String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Skill     Skill    @relation(fields: [skillId], references: [id])
}

model UserRole {
  id                  String                @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  UserAndRoleRelation UserAndRoleRelation[]
}

model UserAndRoleRelation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  roleId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Role      UserRole @relation(fields: [roleId], references: [id])
}
